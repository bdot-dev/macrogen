<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="macrogen.www.mapper.PrductMapper">

	<sql id="prduct_sub_ctgry_sn_list">
		select t1.ctgry_sn
		from vw_prductctgry t1
		inner join vw_prductctgry t2
			on t1.ctgry_sn_path like concat(t2.ctgry_sn_path, '%')
			and t2.ctgry_sn in (
				<foreach collection="prductctgrySnList" item="ctgrySn" separator=", ">
					#{ctgrySn}
				</foreach>
			)
		where t1.expsr_yn = 'Y'
	</sql>

	<sql id="list_where">
		<if test="expsrYn != null and expsrYn != '' ">
			AND tp.expsr_yn = #{expsrYn}
		</if>
		<if test="prductKndCode != null and prductKndCode != '' ">
			AND tp.prduct_knd_code = #{prductKndCode}
		</if>

		<if test="searchKeyword != null and searchKeyword != ''">
			AND ( tp.prduct_sn = #{searchKeyword}
			      or tp.prduct_nm like concat('%', #{searchKeyword}, '%'))
		</if>
		<choose>
			<when test="prductctgrySnList != null and prductctgrySnList.isEmpty != true">
				and exists (
					<!-- 제품.대표카테고리에 존재 -->
					select 1
					from tb_prduct
					where prduct_sn = tp.prduct_sn
					and reprsnt_ctgry_sn in (
						<include refid="prduct_sub_ctgry_sn_list" />
					)
					union all
					<!-- 제품_제품카테고리.카테고리에 존재 -->
					select 1
					from tb_prduct_prductctgry
					where prduct_sn = tp.prduct_sn
					and ctgry_sn in (
						<include refid="prduct_sub_ctgry_sn_list" />
					)
				)
			</when>
		</choose>

	</sql>

	<select id="list" parameterType="prductVo" resultType="prductVo">
		<include refid="paging.countTop" />
			SELECT
				tp.prduct_sn
				, tp.prduct_knd_code
				, ( select code_nm from tb_code tc where code = tp.prduct_knd_code ) prduct_knd_code_nm
				, tp.prduct_nm
				, tp.prduct_pc
				, tp.reprsnt_image_atch_id
				, ( select physicl_flpth from tb_atch where atch_id = tp.reprsnt_image_atch_id ) reprsnt_image_flpth
				, tp.prduct_intrcn
				, tp.expsr_yn
				, tp.sort_ordr
				, tp.regist_dt
				, tp.register_sn
				, tp.updt_dt
				, tp.updusr_sn
				, tp.reprsnt_ctgry_sn
	 			, ( select ctgry_nm_path from vw_prductctgry where ctgry_sn = tp.reprsnt_ctgry_sn ) reprsnt_ctgry_nm_path
			FROM
				tb_prduct tp
			WHERE 1 = 1
			<include refid="list_where" />
			<choose>
				<when test='orderBy == "regist_dt_desc"'>
					order by tp.regist_dt desc
				</when>
				<when test='orderBy == "regist_dt_asc"'>
					order by tp.regist_dt asc
				</when>
				<otherwise>
					order by tp.regist_dt desc
				</otherwise>
			</choose>

		<include refid="paging.countBottom"/>
	</select>

	<select id="count" parameterType="prductVo" resultType="int">
		select
			count(*)
		from
			tb_prduct  tp
		where 1 = 1
		<include refid="list_where" />
	</select>

	<select id="view" parameterType="prductVo" resultType="prductVo">
		SELECT
			tp.prduct_sn
			, tp.prduct_knd_code
			, ( select code_nm from tb_code tc where code = tp.prduct_knd_code ) prduct_knd_code_nm
			, tp.prduct_nm
			, tp.prduct_pc
			, tp.reprsnt_image_atch_id
			, ( select physicl_flpth from tb_atch where atch_id = tp.reprsnt_image_atch_id ) reprsnt_image_flpth
			, tp.reprsnt_ctgry_sn
			, ( select ctgry_nm from vw_prductctgry where ctgry_sn = tp.reprsnt_ctgry_sn ) reprsnt_ctgry_nm
 			, ( select ctgry_nm_path from vw_prductctgry where ctgry_sn = tp.reprsnt_ctgry_sn ) reprsnt_ctgry_nm_path
			, tp.prduct_intrcn
			, tp.expsr_yn
			, tp.sort_ordr
			, tp.regist_dt
			, tp.register_sn
			, ( select user_nm from tb_user where user_sn = tp.register_sn ) register_nm
			, tp.updt_dt
			, tp.updusr_sn
			, ( select user_nm from tb_user where user_sn = tp.updusr_sn ) updusr_nm
		FROM
			tb_prduct tp
		WHERE prduct_sn = #{prductSn}
	</select>

	<select id="seq" resultType="long">
		select fn_nextval('sq_prduct')
	</select>

	<insert id="insert" parameterType="prductVo">
		insert into tb_prduct(
			prduct_sn, prduct_knd_code, prduct_nm, prduct_pc, reprsnt_image_atch_id, prduct_intrcn, expsr_yn, sort_ordr
			, reprsnt_ctgry_sn
			, regist_dt, register_sn, updt_dt, updusr_sn
		) values (
			#{prductSn}, #{prductKndCode}, #{prductNm}, #{prductPc}, #{reprsntImageAtchId}, #{prductIntrcn}, #{expsrYn}, #{sortOrdr}
			, #{reprsntCtgrySn}
			, now(), #{registerSn}, now(), #{updusrSn}
		)
	</insert>

	<update id="update" parameterType="prductVo">
		update tb_prduct
		set
			updt_dt = now()
			, updusr_sn = #{updusrSn}
			, reprsnt_ctgry_sn = #{reprsntCtgrySn}
			, reprsnt_image_atch_id = #{reprsntImageAtchId}
			<if test="prductKndCode != null">, prduct_knd_code = #{prductKndCode} </if>
			<if test="prductNm != null">, prduct_nm = #{prductNm} </if>
			<if test="prductPc != null">, prduct_pc = #{prductPc} </if>
			<if test="prductIntrcn != null">, prduct_intrcn = #{prductIntrcn} </if>
			<if test="expsrYn != null">, expsr_yn = #{expsrYn} </if>
			<if test="sortOrdr != null">, sort_ordr = #{sortOrdr} </if>
		where prduct_sn = #{prductSn}
	</update>

	<delete id="delete" parameterType="prductVo">
		delete from tb_prduct where prduct_sn = #{prductSn}
	</delete>

	<update id="updateSortOrder" parameterType="prductVo" >
		UPDATE tb_prduct SET
			sort_ordr = #{sortOrdr}
		WHERE
			prduct_sn = #{prductSn}
	</update>

	<update id="updateExpsrYn" parameterType="prductVo" >
		UPDATE tb_prduct SET
			expsr_yn = #{expsrYn}
		WHERE
			prduct_sn = #{prductSn}
	</update>

</mapper>